// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToCBooks.App.Data.Context;

namespace ToCBooks.App.Migrations
{
    [DbContext(typeof(ToCBooksContext))]
    [Migration("20200823191057_Atualizacao05")]
    partial class Atualizacao05
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ToCBooks.App.Business.Models.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("LivrosModelId");

                    b.Property<int>("StatusAtual");

                    b.HasKey("Id");

                    b.HasIndex("LivrosModelId");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("ToCBooks.App.Business.Models.Parametro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome")
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<int>("StatusAtual");

                    b.Property<int>("Tipo");

                    b.Property<double>("Valor");

                    b.HasKey("Id");

                    b.ToTable("Parametro");
                });

            modelBuilder.Entity("ToCBooks.App.Models.LivrosModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Altura");

                    b.Property<int>("Ano");

                    b.Property<string>("Autor")
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("CodigoDeBarras")
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Edicao");

                    b.Property<string>("Editora")
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("Foto")
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("ISBN")
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<double>("Largura");

                    b.Property<int>("Paginas");

                    b.Property<double>("Peso");

                    b.Property<Guid?>("PrecificacaoId");

                    b.Property<string>("Preco")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 64)))
                        .HasColumnType("varchar(200)");

                    b.Property<double>("Profundidade");

                    b.Property<int>("StatusAtual");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("PrecificacaoId");

                    b.ToTable("Livros");
                });

            modelBuilder.Entity("ToCBooks.App.Business.Models.Categoria", b =>
                {
                    b.HasOne("ToCBooks.App.Models.LivrosModel")
                        .WithMany("Categoria")
                        .HasForeignKey("LivrosModelId");
                });

            modelBuilder.Entity("ToCBooks.App.Models.LivrosModel", b =>
                {
                    b.HasOne("ToCBooks.App.Business.Models.Parametro", "Precificacao")
                        .WithMany()
                        .HasForeignKey("PrecificacaoId");
                });
#pragma warning restore 612, 618
        }
    }
}
